##
#  Remove the default keybinds
##
unbind-key -a

# Set the prefix to ^Z.
set-option -g prefix C-z
#bind-key -T prefix C-z next-window
bind-key -T prefix z send-prefix

# lockscreen ^X x 
#bind-key -T prefix x lock-server


set -g default-terminal "screen-256color"

bind-key -T prefix k confirm-before -p "kill-pane #P? (y/n)" kill-pane

bind-key -T prefix - split-window -v
bind-key -T prefix | split-window -h
#bind-key -T prefix x 2 split-window -v
#bind-key -T prefix x 3 split-window -h

#bind-key -T prefix ; command-prompt

# fix the 'Prefix C-<arrow>' and 'Prefix M-<arrow>' commands
# or at least disable Prefix Space that keeps happening

set -g visual-activity on
set -g visual-bell on

##
#  Set up the StatusBar
##

set -g status-position bottom
# placement of tabs
set -g status-justify left
set -ag status-interval 5
set -g status-left ''
set -g status-right-length 200
set -g status-right "#(echo $USER)@#H | \
#(sensors|grep '\\(power\\|temp\\)'|cut -d':' -f 2|sed 's, *,,'|cut -c1-8|xargs) \
#(top -b -n1 |grep load|sed 's,.*load,,'|awk '{print $3}'|sed 's.,..') | \
#(ifconfig -a|grep 'inet'|awk '{print  $2}'|grep -v '127.0.0.1'|grep -v '::1'|xargs printf '%%-15s %%-25s\\n') | \
0%Y-%m-%d %H:%M:%S"

##
#  All the Colours
##

# colour the status bar
set -g status-style 'bg=colour34 fg=colour0 dim'
# colour the tabs
setw -g window-status-current-format ' #I#F'
setw -g window-status-format         ' #I#F'
setw -g window-status-current-style 'fg=colour0 bg=colour40'
setw -g window-status-style         'fg=colour0 bg=colour34'
setw -g window-status-bell-style    'fg=colour0 bg=colour191'
# colour the lines between frames
set -g pane-active-border-style 'fg=colour46 bg=colour0'
set -g pane-border-style        'fg=colour22 bg=colour0'


##
#  Kept Defaults
##
#sort later

bind-key    -T prefix 0                select-window -t :=0
bind-key    -T prefix 1                select-window -t :=1
bind-key    -T prefix 2                select-window -t :=2
bind-key    -T prefix 3                select-window -t :=3
bind-key    -T prefix 4                select-window -t :=4
bind-key    -T prefix 5                select-window -t :=5
bind-key    -T prefix 6                select-window -t :=6
bind-key    -T prefix 7                select-window -t :=7
bind-key    -T prefix 8                select-window -t :=8
bind-key    -T prefix 9                select-window -t :=9
bind-key    -T prefix q                display-panes
bind-key    -T prefix o                select-pane -t :.+
bind-key    -T prefix O                select-pane -t :.-
bind-key    -T prefix :                command-prompt
bind-key    -T prefix ?                list-keys
bind-key    -T prefix [                copy-mode
bind-key    -T prefix ]                paste-buffer
bind-key    -T prefix c                new-window
bind-key    -T prefix d                detach-client
bind-key    -T prefix r                refresh-client
bind-key    -T root   MouseDown1Pane   select-pane -t = \; send-keys -M
bind-key    -T root   MouseDown1Status select-window -t =
#bind-key    -T root   MouseDown3Pane   if-shell -F -t = \#{mouse_any_flag} "select-pane -t=; send-keys -M" "select-pane -mt="
#bind-key    -T root   MouseDrag1Pane   if-shell -F -t = \#{mouse_any_flag} "if -Ft= "\#{pane_in_mode}" "copy-mode -M" "send-keys -M"" "copy-mode -M"
bind-key    -T root   MouseDrag1Border resize-pane -M
#bind-key    -T root   WheelUpPane      if-shell -F -t = \#{mouse_any_flag} "send-keys -M" "if -Ft= "\#{pane_in_mode}" "send-keys -M" "copy-mode -et=""
